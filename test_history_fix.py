#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤.
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from bot.llm_utils import LLMSelector
from bot.provider_manager import ProviderManager
from bot.services.history_service import HistoryService


async def test_conversation_history():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    llm_selector = LLMSelector()
    history_service = HistoryService()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    test_user_id = 999999
    
    try:
        # –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
        await history_service.clear_history(test_user_id)
        print("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        await history_service.save_message(test_user_id, "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?", "user")
        await history_service.save_message(test_user_id, "–ü—Ä–∏–≤–µ—Ç! –î–µ–ª–∞ —Ö–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ!", "assistant")
        await history_service.save_message(test_user_id, "–ö–∞–∫ –ø–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è?", "user")
        await history_service.save_message(test_user_id, "–°–µ–≥–æ–¥–Ω—è —Å–æ–ª–Ω–µ—á–Ω–æ –∏ —Ç–µ–ø–ª–æ!", "assistant")
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        history = await history_service.get_conversation_history(test_user_id, limit=10)
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è: {len(history)} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        for i, msg in enumerate(history):
            print(f"  {i+1}. [{msg['role']}]: {msg['content'][:50]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å—Ç–æ—Ä–∏—è –Ω–µ –ø—É—Å—Ç–∞—è
        if len(history) > 0:
            print("‚úÖ –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            return True
        else:
            print("‚ùå –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –ø—É—Å—Ç–∞—è!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞."""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤...")
    
    success = await test_conversation_history()
    
    if success:
        print("\n‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã:")
        print("   - –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ü–ï–†–ï–î —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
        print("   - –ò—Å—Ç–æ—Ä–∏—è –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤–æ –≤—Å–µ—Ö –∏—Ç–µ—Ä–∞—Ü–∏—è—Ö ReAct —Ü–∏–∫–ª–∞")
        print("   - –î–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏")
    else:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω!")
    
    return success


if __name__ == "__main__":
    result = asyncio.run(main())
    sys.exit(0 if result else 1)